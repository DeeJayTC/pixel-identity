version: '3.4'

services:

  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.5.4
    container_name: pixel_identity_traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true   
    # command: --api.insecure=true --providers.docker --log.level=DEBUG
    labels:
      - "traefik.enable=true"
      # Use "traefik" router configuration defined into the dynamic config file: ./traefik/config.yml
      - "traefik.http.routers.traefik=true"     
    ports:
      # The HTTP port
      - "80:80" 
      # The Https port
      - "443:443"    
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Map the static conf into the container
      - ./.traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      # Map the dynamic conf into the container
      - ./.traefik/config.yml:/etc/traefik/config.yml:ro
      # Map the certificats into the container
      - ./.certificates:/etc/certs:ro
    networks:
      - pixel-network
    profiles:
      - proxy

  mongo:
     image: mongo:latest
     container_name: pixel_identity_mongo
     command: --auth
     restart: always
     volumes:
      - mongo-pixel-identiy-store:/data/db
     networks:
      - pixel-network
     environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: mongopass       
     profiles:
      - mongo

  mongo-express:
    image: mongo-express:latest
    container_name: pixel_identity_mongo_dashboard
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongoadmin
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongopass
      ME_CONFIG_MONGODB_URL: mongodb://mongoadmin:mongopass@mongo:27017/
    depends_on:
      - mongo
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mongo-express.rule=Host(`mongo.docker.localhost`)"
      - "traefik.http.routers.mongo-express.tls=true"
    profiles:
      - mongo
    networks:
      - pixel-network

  postgre:
    image: postgres:14.1-alpine
    container_name: pixel_identity_postgre
    restart: always
    volumes:
      - postgre-pixel-identiy-store:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgreadmin
      POSTGRES_PASSWORD: postgrepass
      POSTGRES_DB: pixel_identity_db
    profiles:
      - postgre
    networks:
      - pixel-network

  adminer:
    image: adminer:latest
    container_name: postgre_dashboard
    restart: always   
    depends_on:
      - postgre
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`postgre.docker.localhost`)"
      - "traefik.http.routers.adminer.tls=true"
    profiles:
      - postgre
    networks:
      - pixel-network

  pixel-identity:
    container_name: pixel_identity_provider
    env_file:
      - ./.config/identity.env  
    environment:     
      - ASPNETCORE_URLS=http://+
      - DbPlugin=Pixel.Identity.Store.PostgreSQL    
      - IdentityHost=https://identity.docker.localhost           
      # Certificates required by OpenIdDict for encyrption and signing
      - Identity:Certificates:EncryptionCertificatePath=/etc/certs/identity-encryption.pfx   
      - Identity:Certificates:SigningCertificatePath=/etc/certs/identity-signing.pfx   
      - ConnectionStrings:PostgreServerConnection=User ID=postgreadmin;Password=postgrepass;Server=postgre;Port=5432;Database=pixel_identity_db;
      # Certificate settings when using https
      #-Kestrel:Certificates:Default:Path=/etc/certs/pixel-identity-cert.pem
      #-Kestrel:Certificates:Default:KeyPath=/etc/certs/pixel-identity-key.pem 
    volumes:
      - ./.certificates:/etc/certs:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro      
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pixel-identity.rule=Host(`identity.docker.localhost`)"
      - "traefik.http.routers.pixel-identity.tls=true"    
    networks:
      - pixel-network
  
volumes:
  mongo-pixel-identiy-store:
  postgre-pixel-identiy-store:

networks:
  pixel-network:
    external: true
