@inject IUserRolesService userRolesService
@inject ISnackbar snackBar;
@attribute [Authorize(Policy = Policies.IsAdmin)]

<MudDialog>
    <DialogContent>       
        <MudTextField Label="Role Name" HelperText="Required"
                      @bind-Value="model.RoleName" For="@(() => model.RoleName)" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Add</MudButton>
    </DialogActions>
</MudDialog>

@code
{
    [CascadingParameter]
    MudDialogInstance mudDialog { get; set; }

    UserRoleViewModel model = new UserRoleViewModel(string.Empty);

    void Submit()
    {
        if(!string.IsNullOrEmpty(model.RoleName))
        {
            var result = userRolesService.CreateRole(model);
            if (result != null)
            {
                mudDialog.Close(DialogResult.Ok(true));
                return;
            }
            snackBar.Add("Failed to create role", Severity.Error, config =>
            {
                config.ShowCloseIcon = true;
                config.RequireInteraction = true;
            });
        }
    }

    protected void Cancel() => mudDialog.Cancel();
}
