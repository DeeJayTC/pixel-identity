@page "/users/edit/{userId?}"
@attribute [Authorize(Policy = Policies.CanManageUsers)]

@if (user != null)
{
    <MudText Typo="Typo.h4">Edit Details</MudText>
    <br />
    @if (user.IsLockedOut)
    {

        <div role="alert" class="mud-alert mud-alert-outlined-warning mud-square mud-elevation-2">
             <MudGrid Justify="Justify.FlexEnd">
                <MudItem>
                    <div class="mud-alert-icon mud-alert-icon-left">
                        <svg class="mud-icon-root mud-svg-icon mud-inherit-text mud-icon-size-medium" focusable="false" viewBox="0 0 24 24" aria-hidden="true">
                            <path d="M0 0h24v24H0V0z" fill="none"></path><path d="M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z">
                            </path>
                        </svg>
                    </div>
                </MudItem>
                <MudItem xs="10" Class="d-flex align-center" >
                   User account is temporarily locked out until @user.LockoutEnd.GetValueOrDefault().ToString()
                </MudItem>
                <MudSpacer />
                <MudItem xs="1">
                    <MudButton Variant="Variant.Filled" Color="Color.Warning"
                        @onclick="UnlockUserAccountAsync">Unlock</MudButton>
                </MudItem>
             </MudGrid>
        </div>      
    }
    <br />
    <MudPaper Elevation="4">
        <EditForm Model="@user" OnValidSubmit="UpdateUserDetails">
            <DataAnnotationsValidator />
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="User Name" @bind-Value="user.UserName" For="@(() => user.UserName)" Disabled="true" />
                    <MudTextField Label="Email" Class="mt-3" @bind-Value="user.Email" For="@(() => user.Email)" />
                    <MudTextField Label="Phone Number" Class="mt-3" @bind-Value="user.PhoneNumber" For="@(() => user.PhoneNumber)" />
                    <br />

                    <MudSwitch @bind-Checked="user.EmailConfirmed" Label="Email Confirmed" Color="Color.Success" Disabled="true" />
                    <MudSwitch @bind-Checked="user.PhoneNumberConfirmed" Label="Phone Number Confirmed" Color="Color.Success" Disabled="true" />
                    <MudSwitch @bind-Checked="user.TwoFactorEnabled" Label="Two Factor Enabled" Color="Color.Success" Disabled="true" />
                    <MudSwitch @bind-Checked="user.LockoutEnabled" Label="Lock Out Enabled" Color="Color.Success" />

                </MudCardContent>
                <MudCardActions>
                    <MudGrid Justify="Justify.FlexEnd">
                        @if (!user.IsLockedOut)
                        {
                            <MudItem xs="2" Class="auto-flex-basis">
                                <MudButton Variant="Variant.Filled" Color="Color.Warning" @onclick="LockUserAccountAsync">Lock (90 days)</MudButton>
                            </MudItem>
                        }
                        <MudItem xs="1">
                            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Update</MudButton>
                        </MudItem>
                    </MudGrid>
                </MudCardActions>
            </MudCard>
        </EditForm>
    </MudPaper>

    <br />
    <br />

    <div class="d-flex flex-wrap">
        <MudText Typo="Typo.h4">Manage Roles</MudText>
        <MudIconButton Icon="@Icons.Material.Outlined.AddCircleOutline" Size="Size.Medium"
                   @onclick="AddRoleAsync" Color="Color.Primary"></MudIconButton>
    </div>
    <br />

    <MudPaper Elevation="4" Class="px-4 py-2">
        <EditableCollection TItem="UserRoleViewModel" TValue="string" ItemSize="2"
                        OnDeleteItem="@DeleteRoleAsync" OnAddNewItem="AddRoleAsync"
                        Items="(user.UserRoles ?? Enumerable.Empty<UserRoleViewModel>())" NewItem="@string.Empty">
            <ItemTemplate Context="item">
                <MudText Typo="Typo.h6">@item.RoleName</MudText>
            </ItemTemplate>
        </EditableCollection>
    </MudPaper>

}

